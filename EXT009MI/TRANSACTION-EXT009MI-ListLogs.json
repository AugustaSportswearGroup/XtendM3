{"programModules":{"EXT009MI":{"program":"EXT009MI","triggers":{},"transactions":{"ListLogs":{"sourceUuid":"148501e0-d888-4f39-af22-9f89fe9b3f5e","name":"ListLogs","program":"EXT009MI","description":"List Log Information","active":true,"multi":true,"modified":1689616926915,"modifiedBy":"M3CONSADMX","outputFields":[{"name":"CONO","description":"Company Number","length":3,"mandatory":false,"type":"N"},{"name":"DIVI","description":"Division","length":3,"mandatory":false,"type":"A"},{"name":"TABL","description":"Table","length":6,"mandatory":false,"type":"A"},{"name":"FLDN","description":"Field","length":6,"mandatory":false,"type":"A"},{"name":"KVA1","description":"Key Value 1","length":40,"mandatory":false,"type":"A"},{"name":"KVA2","description":"Key Value 2","length":40,"mandatory":false,"type":"A"},{"name":"OVAL","description":"Old Value","length":60,"mandatory":false,"type":"A"},{"name":"VALU","description":"Value","length":60,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"Company Number","length":3,"mandatory":false,"type":"N"},{"name":"DIVI","description":"Division","length":3,"mandatory":false,"type":"A"},{"name":"TABL","description":"Table","length":6,"mandatory":false,"type":"A"},{"name":"FLDN","description":"Field","length":6,"mandatory":false,"type":"A"},{"name":"KVA1","description":"Key Value 1","length":40,"mandatory":false,"type":"A"},{"name":"KVA2","description":"Key Value 2","length":40,"mandatory":false,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"148501e0-d888-4f39-af22-9f89fe9b3f5e":{"uuid":"148501e0-d888-4f39-af22-9f89fe9b3f5e","updated":1701781181949,"updatedBy":"ABHISHEK","created":1676975753185,"createdBy":"M3CONSADMX","apiVersion":"0.21","beVersion":"16.0.0.20230918173517.9","language":"GROOVY","codeHash":"66389C2BD245665E182209EE6D5A74CFD11BA08558B34F99B0E482A9FD625C48","code":"LyoqDQogKiBSRUFETUUNCiAqIFRoaXMgZXh0ZW5zaW9uIGlzIGJlaW5nIHVzZWQgdG8gTGlzdCByZWNvcmRzIGZyb20gRVhUTE9HIHRhYmxlLiANCiAqDQogKiBOYW1lOiBFWFQwMDlNSS5MaXN0TG9ncw0KICogRGVzY3JpcHRpb246IExpc3RpbmcgcmVjb3JkcyB0byBFWFRMT0cgdGFibGUNCiAqIERhdGUJICAgICAgQ2hhbmdlZCBCeSAgICAgICAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbg0KICoyMDIzMDIyMSAgU3VyaXlhTkBmb3J0dWRlLmNvICAgICAgTGlzdGluZyByZWNvcmRzIGZyb20gIEVYVExPRyB0YWJsZQ0KICoNCiAqLw0KDQoNCnB1YmxpYyBjbGFzcyBMaXN0TG9ncyBleHRlbmRzIEV4dGVuZE0zVHJhbnNhY3Rpb24gew0KICAgIHByaXZhdGUgZmluYWwgTUlBUEkgbWkNCiAgICBwcml2YXRlIGZpbmFsIERhdGFiYXNlQVBJIGRhdGFiYXNlDQogICAgcHJpdmF0ZSBmaW5hbCBQcm9ncmFtQVBJIHByb2dyYW0NCiAgICBwcml2YXRlIGZpbmFsIE1JQ2FsbGVyQVBJIG1pQ2FsbGVyDQoNCiAgICBwcml2YXRlIFN0cmluZyBpRElWSSwgaVRBQkwsIGlGTEROLCBpS1ZBMSwgaUtWQTINCiAgICBwcml2YXRlIEhhc2hNYXAgPFN0cmluZywgU3RyaW5nPiBsb2dEYXRhDQogICAgcHJpdmF0ZSBpbnQgaUNPTk8sIHBhZ2VTaXplID0gMTAwMDANCiAgICBwcml2YXRlIGJvb2xlYW4gdmFsaWRJbnB1dCA9IHRydWUNCg0KDQogICAgcHVibGljIExpc3RMb2dzKE1JQVBJIG1pLCBEYXRhYmFzZUFQSSBkYXRhYmFzZSwgUHJvZ3JhbUFQSSBwcm9ncmFtLCBNSUNhbGxlckFQSSBtaUNhbGxlcikgew0KICAgICAgICB0aGlzLm1pID0gbWkNCiAgICAgICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlDQogICAgICAgIHRoaXMucHJvZ3JhbSA9IHByb2dyYW0NCiAgICAgICAgdGhpcy5taUNhbGxlciA9IG1pQ2FsbGVyDQogICAgfQ0KICAgIC8qKg0KICAgICAqKiBNYWluIGZ1bmN0aW9uDQogICAgICogQHBhcmFtDQogICAgICogQHJldHVybg0KICAgICAqLw0KICAgIHB1YmxpYyB2b2lkIG1haW4oKSB7DQogICAgICAgIGlESVZJID0gKG1pLmluRGF0YS5nZXQoIkRJVkkiKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIkRJVkkiKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiRElWSSIpDQogICAgICAgIGlUQUJMID0gKG1pLmluRGF0YS5nZXQoIlRBQkwiKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIlRBQkwiKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiVEFCTCIpDQogICAgICAgIGlGTEROID0gKG1pLmluRGF0YS5nZXQoIkZMRE4iKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIkZMRE4iKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiRkxETiIpDQogICAgICAgIGlLVkExID0gKG1pLmluRGF0YS5nZXQoIktWQTEiKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIktWQTEiKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiS1ZBMSIpDQogICAgICAgIGlLVkEyID0gKG1pLmluRGF0YS5nZXQoIktWQTIiKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIktWQTIiKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiS1ZBMiIpDQogICAgICAgIGlDT05PID0gKG1pLmluRGF0YS5nZXQoIkNPTk8iKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIkNPTk8iKS50cmltKCkuaXNFbXB0eSgpKSA/IHByb2dyYW0uTERBWkQuQ09OTyBhcyBJbnRlZ2VyIDogbWkuaW5EYXRhLmdldCgiQ09OTyIpIGFzIEludGVnZXINCiAgICAgICAgDQogICAgICAgIHZhbGlkYXRlSW5wdXQoKQ0KICAgICAgICBpZiAodmFsaWRJbnB1dCkgew0KICAgICAgICBsaXN0UmVjb3JkKCkNCiAgICAgICAgfQ0KICAgIH0NCiAgICANCiAgICANCiAgICAgICAgICAgIC8qKg0KICAgKlZhbGlkYXRlIHJlY29yZHMgDQogICAqIEBwYXJhbXMgDQogICAqIEByZXR1cm4gDQogICAqLw0KICBwdWJsaWMgdmFsaWRhdGVJbnB1dCgpIHsNCiAgICAvL1ZhbGlkYXRlIENvbXBhbnkgTnVtYmVyDQogICAgTWFwPFN0cmluZywgU3RyaW5nPiAgcGFyYW1zID0gWyJDT05PIjogaUNPTk8udG9TdHJpbmcoKS50cmltKCldDQogICAgQ2xvc3VyZTw/PiAgY2FsbGJhY2sgPSB7DQogICAgICBNYXAgPCBTdHJpbmcsDQogICAgICBTdHJpbmcgPiByZXNwb25zZSAtPg0KICAgICAgaWYgKHJlc3BvbnNlLkNPTk8gPT0gbnVsbCkgew0KICAgICAgICBtaS5lcnJvcigiSW52YWxpZCBDb21wYW55IE51bWJlciAiICsgaUNPTk8pDQogICAgICAgIHZhbGlkSW5wdXQgPSBmYWxzZQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICB9DQogICAgbWlDYWxsZXIuY2FsbCgiTU5TMDk1TUkiLCAiR2V0IiwgcGFyYW1zLCBjYWxsYmFjaykNCiAgICANCiAgICAvL1ZhbGlkYXRlIERpdmlzaW9uDQogICAgcGFyYW1zID0gWyJDT05PIjogaUNPTk8udG9TdHJpbmcoKS50cmltKCksIkRJVkkiOmlESVZJLnRvU3RyaW5nKCkudHJpbSgpXQ0KICAgIGNhbGxiYWNrID0gew0KICAgICAgTWFwIDwgU3RyaW5nLA0KICAgICAgICBTdHJpbmcgPiByZXNwb25zZSAtPg0KICAgICAgICBpZiAocmVzcG9uc2UuRElWSSA9PSBudWxsKSB7DQogICAgICAgICAgbWkuZXJyb3IoIkludmFsaWQgRGl2aXNpb24gIiArIGlESVZJKQ0KICAgICAgICAgIHZhbGlkSW5wdXQgPSBmYWxzZQ0KICAgICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgICB9DQogICAgfQ0KICAgIA0KICAgIG1pQ2FsbGVyLmNhbGwoIk1OUzEwME1JIiwgIkdldEJhc2ljRGF0YSIsIHBhcmFtcywgY2FsbGJhY2spDQogICAgDQogICAgLy9WYWxpZGF0ZSBUYWJsZQ0KICAgIGlmIChpVEFCTCA9PSBudWxsIHx8IGlUQUJMLnRyaW0oKS5pc0VtcHR5KCkpIHsNCiAgICAgIG1pLmVycm9yKCJUYWJsZSBtdXN0IGJlIGVudGVyZWQiKQ0KICAgICAgdmFsaWRJbnB1dCA9IGZhbHNlDQogICAgICByZXR1cm4gZmFsc2UNCiAgICB9DQogICAgDQogICAgLy9WYWxpZGF0ZSBGaWVsZA0KICAgIGlmIChpRkxETiA9PSBudWxsIHx8IGlGTEROLnRyaW0oKS5pc0VtcHR5KCkpIHsNCiAgICAgIG1pLmVycm9yKCJGaWVsZCBtdXN0IGJlIGVudGVyZWQiKQ0KICAgICAgdmFsaWRJbnB1dCA9IGZhbHNlDQogICAgICByZXR1cm4gZmFsc2UNCiAgICB9DQogICAgICANCiAgfQ0KICAgIC8qKg0KICAgICAqTGlzdCByZWNvcmRzIGZyb20gRVhUTE9HIHRhYmxlDQogICAgICogQHBhcmFtcyANCiAgICAgKiBAcmV0dXJuIA0KICAgICAqLw0KICAgIHB1YmxpYyBsaXN0UmVjb3JkKCkgew0KICAgICAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJFWFRMT0ciKS5zZWxlY3Rpb24oIkVYRElWSSIsICJFWFRBQkwiLCAiRVhGTEROIiwgIkVYS1ZBMSIsICJFWEtWQTIiLCAiRVhPVkFMIiwgIkVYVkFMVSIsICJFWENPTk8iKS5pbmRleCgiMTAiKS5idWlsZCgpDQogICAgICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgICAgIGlmKCFpRElWSS50cmltKCkuaXNFbXB0eSgpJiYhaVRBQkwudHJpbSgpLmlzRW1wdHkoKSYmIWlGTEROLnRyaW0oKS5pc0VtcHR5KCkmJiFpS1ZBMS50cmltKCkuaXNFbXB0eSgpJiYhaUtWQTIudHJpbSgpLmlzRW1wdHkoKSkNCiAgICAgICAgew0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYQ09OTyIsIGlDT05PKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYRElWSSIsIGlESVZJKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYVEFCTCIsIGlUQUJMKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYRkxETiIsIGlGTEROKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYS1ZBMSIsIGlLVkExKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYS1ZBMiIsIGlLVkEyKQ0KICAgICAgICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCA2LCBwYWdlU2l6ZSwgcmVzdWx0c2V0KQ0KICAgICAgICB9IGVsc2UgaWYgKCFpRElWSS50cmltKCkuaXNFbXB0eSgpJiYhaVRBQkwudHJpbSgpLmlzRW1wdHkoKSYmIWlGTEROLnRyaW0oKS5pc0VtcHR5KCkmJiFpS1ZBMS50cmltKCkuaXNFbXB0eSgpKQ0KICAgICAgICB7DQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhDT05PIiwgaUNPTk8pDQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhESVZJIiwgaURJVkkpDQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhUQUJMIiwgaVRBQkwpDQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhGTEROIiwgaUZMRE4pDQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhLVkExIiwgaUtWQTEpDQogICAgICAgICAgcXVlcnkucmVhZEFsbChjb250YWluZXIsIDUsIHBhZ2VTaXplLCByZXN1bHRzZXQpDQogICAgICAgIH0NCiAgICAgICAgZWxzZSBpZiAoIWlESVZJLnRyaW0oKS5pc0VtcHR5KCkgJiYgIWlUQUJMLnRyaW0oKS5pc0VtcHR5KCkmJiFpRkxETi50cmltKCkuaXNFbXB0eSgpKQ0KICAgICAgICB7DQogICAgICAgICBjb250YWluZXIuc2V0KCJFWENPTk8iLCBpQ09OTykNCiAgICAgICAgICBjb250YWluZXIuc2V0KCJFWERJVkkiLCBpRElWSSkNCiAgICAgICAgICBjb250YWluZXIuc2V0KCJFWFRBQkwiLCBpVEFCTCkNCiAgICAgICAgICBjb250YWluZXIuc2V0KCJFWEZMRE4iLCBpRkxETikNCiAgICAgICAgICBxdWVyeS5yZWFkQWxsKGNvbnRhaW5lciwgNCwgcGFnZVNpemUsIHJlc3VsdHNldCkNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmICghaURJVkkudHJpbSgpLmlzRW1wdHkoKSAmJiAhaVRBQkwudHJpbSgpLmlzRW1wdHkoKSkNCiAgICAgICAgew0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYQ09OTyIsIGlDT05PKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYRElWSSIsIGlESVZJKQ0KICAgICAgICAgIGNvbnRhaW5lci5zZXQoIkVYVEFCTCIsIGlUQUJMKQ0KICAgICAgICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCAzLCBwYWdlU2l6ZSwgcmVzdWx0c2V0KQ0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKCFpRElWSS50cmltKCkuaXNFbXB0eSgpKQ0KICAgICAgICB7DQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhDT05PIiwgaUNPTk8pDQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhESVZJIiwgaURJVkkpDQogICAgICAgICAgcXVlcnkucmVhZEFsbChjb250YWluZXIsIDIsIHBhZ2VTaXplLCByZXN1bHRzZXQpDQogICAgICAgIH1lbHNlIA0KICAgICAgICB7DQogICAgICAgICAgY29udGFpbmVyLnNldCgiRVhDT05PIiwgaUNPTk8pDQogICAgICAgICAgcXVlcnkucmVhZEFsbChjb250YWluZXIsIDEsIHBhZ2VTaXplLCByZXN1bHRzZXQpDQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgDQogICAgfQ0KICAgIENsb3N1cmU8Pz4gcmVzdWx0c2V0ID0gew0KICAgICAgICBEQkNvbnRhaW5lciBjb250YWluZXIgLT4NCiAgICAgICAgbWkub3V0RGF0YS5wdXQoIkRJVkkiLCBjb250YWluZXIuZ2V0KCJFWERJVkkiKS50b1N0cmluZygpKQ0KICAgICAgICBtaS5vdXREYXRhLnB1dCgiVEFCTCIsIGNvbnRhaW5lci5nZXQoIkVYVEFCTCIpLnRvU3RyaW5nKCkpDQogICAgICAgIG1pLm91dERhdGEucHV0KCJGTEROIiwgY29udGFpbmVyLmdldCgiRVhGTEROIikudG9TdHJpbmcoKSkNCiAgICAgICAgbWkub3V0RGF0YS5wdXQoIktWQTEiLCBjb250YWluZXIuZ2V0KCJFWEtWQTEiKS50b1N0cmluZygpKQ0KICAgICAgICBtaS5vdXREYXRhLnB1dCgiS1ZBMiIsIGNvbnRhaW5lci5nZXQoIkVYS1ZBMiIpLnRvU3RyaW5nKCkpDQogICAgICAgIG1pLm91dERhdGEucHV0KCJPVkFMIiwgY29udGFpbmVyLmdldCgiRVhPVkFMIikudG9TdHJpbmcoKSkNCiAgICAgICAgbWkub3V0RGF0YS5wdXQoIlZBTFUiLCBjb250YWluZXIuZ2V0KCJFWFZBTFUiKS50b1N0cmluZygpKQ0KICAgICAgICBtaS5vdXREYXRhLnB1dCgiQ09OTyIsIGNvbnRhaW5lci5nZXQoIkVYQ09OTyIpLnRvU3RyaW5nKCkpDQoNCiAgICAgICAgbWkud3JpdGUoKQ0KDQogICAgfQ0KfQ=="}}}