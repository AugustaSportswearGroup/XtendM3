{"programModules":{"EXT100MI":{"program":"EXT100MI","triggers":{},"transactions":{"LstReplSKU":{"sourceUuid":"9a9d157f-cbea-4fee-a5fd-492f0fee404f","name":"LstReplSKU","program":"EXT100MI","description":"SKU's needing Replenishment","active":true,"multi":true,"modified":1706767325453,"modifiedBy":"ABHISHEK","outputFields":[{"name":"ITNO","description":"Item Number","length":15,"mandatory":false,"type":"A"},{"name":"LNCT","description":"Line Count","length":5,"mandatory":false,"type":"N"},{"name":"ORQT","description":"Order Quantity","length":10,"mandatory":false,"type":"A"},{"name":"AVQT","description":"Available Inventory","length":10,"mandatory":false,"type":"A"}],"inputFields":[{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"PLDT","description":"Planning Date","length":8,"mandatory":false,"type":"A"},{"name":"DWDT","description":"Requested Delivery Date","length":8,"mandatory":false,"type":"A"},{"name":"INFL","description":"Inventory Flag","length":1,"mandatory":false,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"9a9d157f-cbea-4fee-a5fd-492f0fee404f":{"uuid":"9a9d157f-cbea-4fee-a5fd-492f0fee404f","updated":1707408294698,"updatedBy":"ABHISHEK","created":1705334114724,"createdBy":"SSWARNA","apiVersion":"0.9","beVersion":"16.0.0.20231123104741.6","language":"GROOVY","codeHash":"C54C115A78730305C38540D8209994F28C85C66A2EE199F50FB34A6D5D69D9C6","code":""}}}