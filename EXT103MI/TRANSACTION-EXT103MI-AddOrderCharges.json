{"programModules":{"EXT103MI":{"program":"EXT103MI","triggers":{},"transactions":{"AddOrderCharges":{"sourceUuid":"e9994ff1-3fbf-402e-bd86-c15d6d5b5e55","name":"AddOrderCharges","program":"EXT103MI","description":"Add Order charges with data from GlobalShip","active":true,"multi":false,"modified":1697714792829,"modifiedBy":"M3CONSADMX","outputFields":[],"inputFields":[{"name":"CONO","description":"Company Number","length":3,"mandatory":false,"type":"N"},{"name":"ORNO","description":"Order Number","length":10,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"e9994ff1-3fbf-402e-bd86-c15d6d5b5e55":{"uuid":"e9994ff1-3fbf-402e-bd86-c15d6d5b5e55","updated":1702540629115,"updatedBy":"ABHISHEK","created":1697691188831,"createdBy":"M3CONSADMX","apiVersion":"0.21","beVersion":"16.0.0.20230918173517.9","language":"GROOVY","codeHash":"35119345B459B128572D1AB904702C9BF4A06595D8676F3D7CD318395B68F46E","code":""}}}