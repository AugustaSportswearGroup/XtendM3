{"programModules":{"EXT104MI":{"program":"EXT104MI","triggers":{},"transactions":{"GetOrder":{"sourceUuid":"819fea71-bf21-43c7-80d7-0b67961da9f0","name":"GetOrder","program":"EXT104MI","description":"Get Order Detail","active":true,"multi":false,"modified":1699851754738,"modifiedBy":"SADANGJ","outputFields":[{"name":"DIVI","description":"Division","length":3,"mandatory":false,"type":"A"},{"name":"ORNO","description":"Order number","length":10,"mandatory":false,"type":"A"},{"name":"OREF","description":"Ecommerce order number","length":30,"mandatory":false,"type":"A"},{"name":"ORDT","description":"Order date","length":8,"mandatory":false,"type":"A"},{"name":"ORST","description":"Status","length":30,"mandatory":false,"type":"A"},{"name":"CUOR","description":"PO number","length":20,"mandatory":false,"type":"A"},{"name":"DSDT","description":"Ship date","length":8,"mandatory":false,"type":"A"},{"name":"ETRN","description":"Tracking number","length":200,"mandatory":false,"type":"A"},{"name":"CARR","description":"Carrier","length":15,"mandatory":false,"type":"A"},{"name":"NTLA","description":"Total order value net","length":16,"mandatory":false,"type":"A"},{"name":"TEPY","description":"Payment term","length":3,"mandatory":false,"type":"A"},{"name":"TEPA","description":"Blind indicator","length":3,"mandatory":false,"type":"A"},{"name":"PTOT","description":"Product total","length":16,"mandatory":false,"type":"A"},{"name":"STOT","description":"Shipping Total","length":16,"mandatory":false,"type":"A"},{"name":"DTOT","description":"Discount Total","length":16,"mandatory":false,"type":"A"},{"name":"MODL","description":"Delivery method","length":3,"mandatory":false,"type":"A"},{"name":"CRAM","description":"Charges","length":16,"mandatory":false,"type":"A"},{"name":"SCUN","description":"Ship to name","length":36,"mandatory":false,"type":"A"},{"name":"BCUN","description":"Bill to name","length":36,"mandatory":false,"type":"A"},{"name":"CANU","description":"Card number","length":19,"mandatory":false,"type":"A"},{"name":"CTPY","description":"Card type","length":20,"mandatory":false,"type":"A"},{"name":"IVNO","description":"Invoice number","length":150,"mandatory":false,"type":"A"},{"name":"SAD1","description":"Ship to Address1","length":36,"mandatory":false,"type":"A"},{"name":"SAD2","description":"Ship to Address2","length":36,"mandatory":false,"type":"A"},{"name":"STOW","description":"Ship to City","length":20,"mandatory":false,"type":"A"},{"name":"SECA","description":"Ship to State","length":2,"mandatory":false,"type":"A"},{"name":"SPON","description":"Ship to Postal Code","length":10,"mandatory":false,"type":"A"},{"name":"SCSC","description":"Ship to Country","length":3,"mandatory":false,"type":"A"},{"name":"BAD1","description":"Bill to Address1","length":36,"mandatory":false,"type":"A"},{"name":"BAD2","description":"Bill to Address2","length":36,"mandatory":false,"type":"A"},{"name":"BTOW","description":"Bill to City","length":20,"mandatory":false,"type":"A"},{"name":"BECA","description":"Bill to State","length":2,"mandatory":false,"type":"A"},{"name":"BPON","description":"Bill to Postal Code","length":10,"mandatory":false,"type":"A"},{"name":"BCSC","description":"Bill to Country","length":3,"mandatory":false,"type":"A"},{"name":"OBLC","description":"Order stop","length":3,"mandatory":false,"type":"A"},{"name":"CUCD","description":"Currency","length":3,"mandatory":false,"type":"A"},{"name":"VTAM","description":"Tax amount","length":16,"mandatory":false,"type":"A"},{"name":"ORSL","description":"Lowest status","length":2,"mandatory":false,"type":"A"},{"name":"ORSH","description":"Highest status","length":2,"mandatory":false,"type":"A"},{"name":"OTIP","description":"Tip number","length":10,"mandatory":false,"type":"A"}],"inputFields":[{"name":"ORNO","description":"Order number","length":10,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"819fea71-bf21-43c7-80d7-0b67961da9f0":{"uuid":"819fea71-bf21-43c7-80d7-0b67961da9f0","updated":1711986962450,"updatedBy":"ABHISHEK","created":1699640262091,"createdBy":"SADANGJ","apiVersion":"0.21","beVersion":"16.0.0.20240116163623.6","language":"GROOVY","codeHash":"DCEFA1E1E82F632422C943ABF3E410792DE212BBB4692DCEF8D0E0FBE8438807","code":"LyoqDQogKiBSRUFETUUNCiAqIFRoaXMgZXh0ZW5zaW9uIGlzIGJlaW5nIHVzZWQgdG8gZ2V0IG9yZGVyIGRldGFpbHMgZm9yIGVjb21tZXJjZSBhcHBsaWNhdGlvbiANCiAqDQogKiBOYW1lOiBFWFQxMDRNSS5HZXRPcmRlcg0KICogRGVzY3JpcHRpb246IFRyYW5zYWN0aW9uIHVzZWQgdG8gR2V0IG9yZGVyIGRldGFpbHMNCiAqIERhdGUJICAgICAgQ2hhbmdlZCBCeSAgICAgICAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbg0KICoyMDIzMTAxOSAgU3VyaXlhTkBmb3J0dWRlLmNvICAgICBHZXQgb3JkZXIgZGV0YWlscyBmb3IgZWNvbW1lcmNlIGFwcGxpY2F0aW9uICAqLw0KDQpwdWJsaWMgY2xhc3MgR2V0T3JkZXIgZXh0ZW5kcyBFeHRlbmRNM1RyYW5zYWN0aW9uIHsNCiAgcHJpdmF0ZSBmaW5hbCBNSUFQSSBtaQ0KICBwcml2YXRlIGZpbmFsIFByb2dyYW1BUEkgcHJvZ3JhbQ0KICBwcml2YXRlIGZpbmFsIERhdGFiYXNlQVBJIGRhdGFiYXNlDQogIHByaXZhdGUgZmluYWwgTUlDYWxsZXJBUEkgbWlDYWxsZXINCiAgcHJpdmF0ZSBpbnQgaUNPTk8sIG1heFBhZ2VTaXplID0gMTAwMDAsIHRyYW5zbGF0aW9uSWQNCiAgcHJpdmF0ZSBTdHJpbmcgaU9STk8sIG1ibWQsIGN1Y2QNCiAgcHJpdmF0ZSBib29sZWFuIHZhbGlkSW5wdXQgPSB0cnVlLCBpc1BIV08gPSBmYWxzZQ0KICBwcml2YXRlIE1hcCA8IFN0cmluZywgU3RyaW5nID4gb3JkZXINCiAgcHJpdmF0ZSBkb3VibGUgY2hyZywgZnJ0LCB0YXhDaGFyZ2UNCg0KICBwdWJsaWMgR2V0T3JkZXIoTUlBUEkgbWksIFByb2dyYW1BUEkgcHJvZ3JhbSwgRGF0YWJhc2VBUEkgZGF0YWJhc2UsIE1JQ2FsbGVyQVBJIG1pQ2FsbGVyKSB7DQogICAgdGhpcy5taSA9IG1pDQogICAgdGhpcy5wcm9ncmFtID0gcHJvZ3JhbQ0KICAgIHRoaXMuZGF0YWJhc2UgPSBkYXRhYmFzZQ0KICAgIHRoaXMubWlDYWxsZXIgPSBtaUNhbGxlcg0KICB9DQoNCiAgLyoqDQogICAqIE1haW4gbWV0aG9kIHRvIGV4ZWN1dGUgdGhlIHRyYW5zYWN0aW9uDQogICAqLw0KDQogIHB1YmxpYyB2b2lkIG1haW4oKSB7DQogICAgaUNPTk8gPSBwcm9ncmFtLkxEQVpELkNPTk8gYXMgSW50ZWdlcg0KICAgIGlPUk5PID0gKG1pLmluRGF0YS5nZXQoIk9STk8iKSA9PSBudWxsIHx8IG1pLmluRGF0YS5nZXQoIk9STk8iKS50cmltKCkuaXNFbXB0eSgpKSA/ICIiIDogbWkuaW5EYXRhLmdldCgiT1JOTyIpLnRyaW0oKQ0KICAgIHZhbGlkYXRlSW5wdXQoKQ0KICAgIGlmICh2YWxpZElucHV0KSB7DQogICAgICBvdXRwdXREYXRhKG9yZGVyKQ0KICAgIH0NCg0KICB9DQoNCiAgLyoqDQogICAqIE1ldGhvZCB0byB2YWxpZGF0ZSBpbnB1dCBvcmRlciBudW1iZXINCiAgICovDQoNCiAgcHVibGljIHZvaWQgdmFsaWRhdGVJbnB1dCgpIHsNCiAgICAvL1ZhbGlkYXRlIE9yZGVyIE51bWJlcg0KICAgIE1hcCA8IFN0cmluZywgU3RyaW5nID4gcGFyYW1zID0gWyJPUk5PIjogaU9STk8udG9TdHJpbmcoKS50cmltKCldDQogICAgQ2xvc3VyZSA8ID8gPiBjYWxsYmFjayA9IHsNCiAgICAgIE1hcCA8IFN0cmluZywNCiAgICAgIFN0cmluZyA+IHJlc3BvbnNlIC0+DQogICAgICBpZiAocmVzcG9uc2UuT1JOTyA9PSBudWxsKSB7DQogICAgICAgIG1pLmVycm9yKCJJbnZhbGlkIE9yZGVyIE51bWJlciAiICsgaU9STk8pDQogICAgICAgIHZhbGlkSW5wdXQgPSBmYWxzZQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIG9yZGVyID0gcmVzcG9uc2UNCiAgICAgIH0NCiAgICB9DQogICAgbWlDYWxsZXIuY2FsbCgiT0lTMTAwTUkiLCAiR2V0T3JkZXJIZWFkIiwgcGFyYW1zLCBjYWxsYmFjaykNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gb3V0cHV0IG9yZGVyIGRhdGENCiAgICogQHBhcmFtIG9yZGVyIE1hcCBjb250YWluaW5nIG9yZGVyIGRldGFpbHMNCiAgICovDQoNCiAgcHVibGljIHZvaWQgb3V0cHV0RGF0YShNYXAgPCBTdHJpbmcsIFN0cmluZyA+IG9yZGVyKSB7DQogICAgbWkub3V0RGF0YS5wdXQoIkRJVkkiLCBvcmRlci5ESVZJKQ0KICAgIG1pLm91dERhdGEucHV0KCJPUk5PIiwgb3JkZXIuT1JOTykNCiAgICBtaS5vdXREYXRhLnB1dCgiT1JFRiIsIG9yZGVyLk9SRUYpDQogICAgbWkub3V0RGF0YS5wdXQoIk9SRFQiLCBvcmRlci5PUkRUKQ0KICAgIG1pLm91dERhdGEucHV0KCJDVU9SIiwgb3JkZXIuQ1VPUikNCiAgICBtaS5vdXREYXRhLnB1dCgiQ1VDRCIsIG9yZGVyLkNVQ0QpDQogICAgbWkub3V0RGF0YS5wdXQoIk9SU0wiLCBvcmRlci5PUlNMKQ0KICAgIG1pLm91dERhdGEucHV0KCJPUlNIIiwgb3JkZXIuT1JTVCkNCiAgICBtaS5vdXREYXRhLnB1dCgiVEVQQSIsIG9yZGVyLlRFUEEpDQogICAgU3RyaW5nIHRlcHkgPSBvcmRlci5URVBZLnRvU3RyaW5nKCkudHJpbSgpDQogICAgdGVweSA9IGdldFRyYW5zbGF0aW9uKCJFQ1pQVCIgKyB0ZXB5KQ0KICAgIGlmICh0ZXB5LmlzRW1wdHkoKSkgew0KICAgICAgdGVweSA9IGdldFRyYW5zbGF0aW9uKCJFQ1pQVERFRkFVIikNCiAgICB9DQogICAgbWkub3V0RGF0YS5wdXQoIlRFUFkiLCB0ZXB5KQ0KICAgIG1pLm91dERhdGEucHV0KCJPVElQIiwgZ2V0VGlwTnVtYmVyKG9yZGVyLk9STk8pKQ0KICAgIFN0cmluZyB6U3RhdHVzID0gZ2V0T3JkZXJTdGF0dXMob3JkZXIuT1JTTCBhcyBJbnRlZ2VyLCBvcmRlci5PUlNUIGFzIEludGVnZXIpDQogICAgbWkub3V0RGF0YS5wdXQoIk9SU1QiLCB6U3RhdHVzKQ0KICAgIEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+IGRlbGl2ZXJ5ID0gcmVhZERlbGl2ZXJpZXMob3JkZXIuQ1VOTywgb3JkZXIuT1JOTywgb3JkZXIuVEVQWSwgelN0YXR1cykNCiAgICBtaS5vdXREYXRhLnB1dCgiRFNEVCIsIGRlbGl2ZXJ5LmdldCgiRFNEVCIpKQ0KICAgIG1pLm91dERhdGEucHV0KCJDQVJSIiwgZGVsaXZlcnkuZ2V0KCJDQVJSIikpDQogICAgbWkub3V0RGF0YS5wdXQoIk1PREwiLCBkZWxpdmVyeS5nZXQoIk1PREwiKSkNCiAgICBtaS5vdXREYXRhLnB1dCgiRVRSTiIsIGRlbGl2ZXJ5LmdldCgiRVRSTiIpKQ0KICAgIGRvdWJsZSB2dGFtID0gZGVsaXZlcnkuZ2V0KCJWVEFNIikgYXMgRG91YmxlDQogICAgbWkub3V0RGF0YS5wdXQoIklWTk8iLCBkZWxpdmVyeS5nZXQoIklWTk8iKSkNCiAgICBIYXNoTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiBzaGlwVG9BZGRyZXNzID0gZ2V0U2hpcHBpbmdBZGRyZXNzKG9yZGVyLk9STk8pDQogICAgbWkub3V0RGF0YS5wdXQoIlNDVU4iLCBzaGlwVG9BZGRyZXNzLlNDVU4pDQogICAgbWkub3V0RGF0YS5wdXQoIlNBRDEiLCBzaGlwVG9BZGRyZXNzLlNBRDEpDQogICAgbWkub3V0RGF0YS5wdXQoIlNBRDIiLCBzaGlwVG9BZGRyZXNzLlNBRDIpDQogICAgbWkub3V0RGF0YS5wdXQoIlNUT1ciLCBzaGlwVG9BZGRyZXNzLlNUT1cpDQogICAgbWkub3V0RGF0YS5wdXQoIlNFQ0EiLCBzaGlwVG9BZGRyZXNzLlNFQ0EpDQogICAgbWkub3V0RGF0YS5wdXQoIlNQT04iLCBzaGlwVG9BZGRyZXNzLlNQT04pDQogICAgbWkub3V0RGF0YS5wdXQoIlNDU0MiLCBzaGlwVG9BZGRyZXNzLlNDU0MpDQogICAgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gYmlsbFRvQWRkcmVzcyA9IGdldEJpbGxpbmdBZGRyZXNzKG9yZGVyLk9STk8pDQogICAgbWkub3V0RGF0YS5wdXQoIkJDVU4iLCBiaWxsVG9BZGRyZXNzLkJDVU4pDQogICAgbWkub3V0RGF0YS5wdXQoIkJBRDEiLCBiaWxsVG9BZGRyZXNzLkJBRDEpDQogICAgbWkub3V0RGF0YS5wdXQoIkJBRDIiLCBiaWxsVG9BZGRyZXNzLkJBRDIpDQogICAgbWkub3V0RGF0YS5wdXQoIkJUT1ciLCBiaWxsVG9BZGRyZXNzLkJUT1cpDQogICAgbWkub3V0RGF0YS5wdXQoIkJFQ0EiLCBiaWxsVG9BZGRyZXNzLkJFQ0EpDQogICAgbWkub3V0RGF0YS5wdXQoIkJQT04iLCBiaWxsVG9BZGRyZXNzLkJQT04pDQogICAgbWkub3V0RGF0YS5wdXQoIkJDU0MiLCBiaWxsVG9BZGRyZXNzLkJDU0MpDQogICAgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gb3JkZXJGaW4gPSBnZXRPcmRlckZpbmFuY2lhbChvcmRlci5PUk5PKQ0KICAgIG1pLm91dERhdGEucHV0KCJQVE9UIiwgb3JkZXJGaW4uTlRMQSkNCiAgICBydHZTaGlwcGluZ0NoYXJnZXMob3JkZXIuT1JOTykNCiAgICBtaS5vdXREYXRhLnB1dCgiU1RPVCIsIGZydCBhcyBTdHJpbmcpDQogICAgbWkub3V0RGF0YS5wdXQoIkNSQU0iLCBjaHJnIGFzIFN0cmluZykNCiAgICBkb3VibGUgZGlzY291bnQgPSBydHZEaXNjb3VudChvcmRlci5PUk5PKQ0KICAgIG1pLm91dERhdGEucHV0KCJEVE9UIiwgZGlzY291bnQgYXMgU3RyaW5nKQ0KICAgIGRvdWJsZSB4YXZ0YW0gPSBydHZWYXRBbW91bnQob3JkZXIuT1JOTykNCiAgICBtaS5vdXREYXRhLnB1dCgiVlRBTSIsIHhhdnRhbSBhcyBTdHJpbmcpDQogICAgZG91YmxlIG50bGEgPSBvcmRlckZpbi5OVExBIGFzIERvdWJsZQ0KICAgIG50bGEgPSBudGxhICsgZnJ0ICsgY2hyZyArIGRpc2NvdW50ICsgdGF4Q2hhcmdlICsgeGF2dGFtDQogICAgbWkub3V0RGF0YS5wdXQoIk5UTEEiLCBudGxhIGFzIFN0cmluZykNCiAgICBtaS53cml0ZSgpDQogIH0NCg0KICAvKioNCiAgICogZ2V0VHJhbnNsYXRpb24gLSBHZXQgdGhlIENSUzg4MSBkYXRhIHRyYW5zbGF0aW9uIHVzaW5nIGEgU3RyaW5nIGtleXdvcmQNCiAgICogQHBhcmFtcyBTdHJpbmcga2V5d29yZA0KICAgKiBAcmV0dXJuIFN0cmluZw0KICAgKi8NCiAgcHJpdmF0ZSBTdHJpbmcgZ2V0VHJhbnNsYXRpb24oU3RyaW5nIGtleXdvcmQpIHsNCiAgICBpZiAodHJhbnNsYXRpb25JZCA9PSAwKSB7DQogICAgICBNYXAgPCBTdHJpbmcsIFN0cmluZyA+IHBhcmFtcyA9IFsiQ09OTyI6IGlDT05PLnRvU3RyaW5nKCkudHJpbSgpLCAiRElWSSI6ICIiLCAiVFJRRiI6ICIwIiwgIk1TVEQiOiAiRUNPTSIsICJNVlJTIjogIjEiLCAiQk1TRyI6ICJFQ1owMDFNSSIsICJJQk9CIjogIk8iLCAiRUxNUCI6ICJBUEkiLCAiRUxNRCI6ICJQcm9wZXJ0aWVzIl0NCiAgICAgIENsb3N1cmUgPCA/ID4gY2FsbGJhY2sgPSB7DQogICAgICAgIE1hcCA8IFN0cmluZywNCiAgICAgICAgU3RyaW5nID4gcmVzcG9uc2UgLT4NCiAgICAgICAgaWYgKHJlc3BvbnNlLklEVFIgIT0gbnVsbCkgew0KICAgICAgICAgIHRyYW5zbGF0aW9uSWQgPSByZXNwb25zZS5JRFRSIGFzIEludGVnZXINCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgbWlDYWxsZXIuY2FsbCgiQ1JTODgxTUkiLCAiR2V0VHJhbnNsYXRpb24iLCBwYXJhbXMsIGNhbGxiYWNrKQ0KICAgIH0NCg0KICAgIFN0cmluZyBtYm1kID0gIiINCiAgICBpZiAodHJhbnNsYXRpb25JZCAhPSAwKSB7DQogICAgICBDbG9zdXJlIDwgPyA+IGdldFRyYW5zbGF0ZWREYXRhID0gew0KICAgICAgICBEQkNvbnRhaW5lciBjb250YWluZXIgLT4NCiAgICAgICAgbWJtZCA9IGNvbnRhaW5lci5nZXQoIlRETUJNRCIpDQogICAgICAgIGlmIChtYm1kID09IG51bGwpIHsNCiAgICAgICAgICBtYm1kID0gIiINCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTUJNVFJEIikuaW5kZXgoIjMwIikuc2VsZWN0aW9uKCJURE1CTUQiKS5idWlsZCgpDQogICAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgICAgY29udGFpbmVyLnNldCgiVERDT05PIiwgaUNPTk8pDQogICAgICBjb250YWluZXIuc2V0KCJURERJVkkiLCAiIikNCiAgICAgIGNvbnRhaW5lci5zZXQoIlRESURUUiIsIHRyYW5zbGF0aW9uSWQgYXMgSW50ZWdlcikNCiAgICAgIGNvbnRhaW5lci5zZXQoIlRETVZYRCIsIGtleXdvcmQpDQogICAgICBxdWVyeS5yZWFkQWxsKGNvbnRhaW5lciwgNCwgbWF4UGFnZVNpemUsIGdldFRyYW5zbGF0ZWREYXRhKQ0KICAgIH0NCiAgICByZXR1cm4gbWJtZC50cmltKCkNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gZ2V0IGNhcnJpZXIgYmFzZWQgb24gbW9kZWwNCiAgICogQHBhcmFtIG1vZGwgTW9kZWwgbnVtYmVyDQogICAqIEByZXR1cm4gQ2FycmllciBuYW1lDQogICAqLw0KICBwdWJsaWMgU3RyaW5nIGdldENhcnJpZXIoU3RyaW5nIG1vZGwpIHsNCiAgICBTdHJpbmcgY2FycmllciA9ICIiDQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiQ1NZVEFCIikuaW5kZXgoIjAwIikuc2VsZWN0aW9uKCJDVFRYMTUiKS5idWlsZCgpDQogICAgREJDb250YWluZXIgY29udGFpbmVyID0gcXVlcnkuZ2V0Q29udGFpbmVyKCkNCiAgICBjb250YWluZXIuc2V0KCJDVENPTk8iLCBpQ09OTykNCiAgICBjb250YWluZXIuc2V0KCJDVERJVkkiLCAiIikNCiAgICBjb250YWluZXIuc2V0KCJDVExOQ0QiLCAiR0IiKQ0KICAgIGNvbnRhaW5lci5zZXQoIkNUU1RDTyIsICJNT0RMIikNCiAgICBjb250YWluZXIuc2V0KCJDVFNUS1kiLCBtb2RsKQ0KICAgIGlmIChxdWVyeS5yZWFkKGNvbnRhaW5lcikpIHsNCiAgICAgIGNhcnJpZXIgPSBjb250YWluZXIuZ2V0KCJDVFRYMTUiKS50b1N0cmluZygpDQogICAgfQ0KICAgIHJldHVybiBjYXJyaWVyDQogIH0NCg0KICAvKioNCiAgICogTWV0aG9kIHRvIGdldCB0aXAgbnVtYmVyIGZvciBhbiBvcmRlcg0KICAgKiBAcGFyYW0gb3JkZXJOdW1iZXIgT3JkZXIgbnVtYmVyDQogICAqIEByZXR1cm4gVGlwIG51bWJlcg0KICAgKi8NCiAgcHVibGljIFN0cmluZyBnZXRUaXBOdW1iZXIoU3RyaW5nIG9yZGVyTnVtYmVyKSB7DQogICAgU3RyaW5nIHRpcE51bWJlciA9ICIiDQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiT09IRUFDIikuaW5kZXgoIjAwIikuc2VsZWN0aW9uKCJCRU9STk8iLCAiQkVBR041IikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiQkVDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiQkVPUk5PIiwgb3JkZXJOdW1iZXIpDQogICAgaWYgKHF1ZXJ5LnJlYWQoY29udGFpbmVyKSkgew0KICAgICAgdGlwTnVtYmVyID0gY29udGFpbmVyLmdldCgiQkVBR041IikudG9TdHJpbmcoKQ0KDQogICAgfQ0KICAgIHJldHVybiB0aXBOdW1iZXINCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gZ2V0IG9yZGVyIHN0YXR1cyBiYXNlZCBvbiBPUlNMIGFuZCBPUlNUDQogICAqIEBwYXJhbSBvcnNsIE9yZGVyIFNMIHN0YXR1cw0KICAgKiBAcGFyYW0gb3JzdCBPcmRlciBTVCBzdGF0dXMNCiAgICogQHJldHVybiBPcmRlciBzdGF0dXMNCiAgICovDQoNCiAgcHVibGljIFN0cmluZyBnZXRPcmRlclN0YXR1cyhpbnQgb3JzbCwgaW50IG9yc3QpIHsNCiAgICBTdHJpbmcgc3RhdHVzID0gIiINCiAgICBpZiAoKG9yc2wgPT0gNzcgJiYgb3JzdCA9PSA3NykgfHwgKG9yc2wgPj0gNjYgJiYgb3JzbCA8IDkwICYmIG9yc3QgPj0gNjYgJiYgb3JzdCA8IDkwKSkgew0KICAgICAgc3RhdHVzID0gIlNoaXBwZWQiDQogICAgfSBlbHNlIGlmIChvcnNsIDwgNjYgJiYgb3JzdCA+PSA2NiAmJiBvcnN0IDwgOTApIHsNCiAgICAgIHN0YXR1cyA9ICJQYXJ0aWFsbHkgc2hpcHBlZCINCiAgICB9IGVsc2UgaWYgKG9yc2wgPCA2NiAmJiBvcnN0IDwgNjYpIHsNCiAgICAgIHN0YXR1cyA9ICJTdWJtaXR0ZWQiDQogICAgfSBlbHNlIGlmIChvcnNsID09IDkwICYmIG9yc3QgPT0gOTApIHsNCiAgICAgIHN0YXR1cyA9ICJDYW5jZWxsZWQiDQogICAgfSBlbHNlIHsNCiAgICAgIHN0YXR1cyA9IG9yc2wgKyAiLyIgKyBvcnN0DQogICAgfQ0KICAgIHJldHVybiBzdGF0dXMNCiAgfQ0KDQogIC8qKg0KICAgKkdldCBkYXRhIGZyb20gTUhESVNIIHRhYmxlDQogICAqIEBwYXJhbXMgDQogICAqIEByZXR1cm4gDQogICAqLw0KICBwdWJsaWMgSGFzaE1hcCByZWFkRGVsaXZlcmllcyhTdHJpbmcgY3VubywgU3RyaW5nIG9ybm8sIFN0cmluZyB0ZXB5LCBTdHJpbmcgelN0YXR1cykgew0KICAgIEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+IGRlbGl2ZXJ5ID0gbmV3IEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+ICgpDQogICAgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gaW52b2ljZXMgPSBuZXcgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gKCkNCiAgICBpbnQgY291bnRlciA9IDANCiAgICBTdHJpbmcgZXRybiA9ICIiDQogICAgU3RyaW5nIHNoaXBEYXRlID0gIjAiDQogICAgZG91YmxlIHZ0YW0gPSAwRA0KICAgIFN0cmluZyBjYXJyID0gIiINCiAgICBTdHJpbmcgbW9kbCA9ICIiDQogICAgQ2xvc3VyZSA8ID8gPiByc1JlYWREZWxpdmVyaWVzID0gew0KICAgICAgREJDb250YWluZXIgY29udGFpbmVyIC0+DQogICAgICBTdHJpbmcgZGxpeCA9IGNvbnRhaW5lci5nZXQoIk9RRExJWCIpLnRvU3RyaW5nKCkNCiAgICAgIGlmIChkbGl4ICE9IG51bGwpIHsNCiAgICAgICAgaWYgKGNvdW50ZXIgPT0gMCkgew0KICAgICAgICAgIHNoaXBEYXRlID0gY29udGFpbmVyLmdldCgiT1FEU0RUIikNCiAgICAgICAgICBldHJuID0gY29udGFpbmVyLmdldCgiT1FFVFJOIikudG9TdHJpbmcoKS50cmltKCkNCiAgICAgICAgICBTdHJpbmcgbW9kZiA9IGNvbnRhaW5lci5nZXQoIk9RTU9ERiIpLnRvU3RyaW5nKCkudHJpbSgpDQogICAgICAgICAgaWYgKCFtb2RmLmlzRW1wdHkoKSkgew0KICAgICAgICAgICAgY2FyciA9IG1vZGYNCiAgICAgICAgICAgIG1vZGwgPSBtb2RmDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGNhcnIgPSBjb250YWluZXIuZ2V0KCJPUU1PREwiKS50b1N0cmluZygpLnRyaW0oKQ0KICAgICAgICAgICAgbW9kbCA9IGNvbnRhaW5lci5nZXQoIk9RTU9ETCIpLnRvU3RyaW5nKCkudHJpbSgpDQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIFN0cmluZyB0cmNrTnVtID0gY29udGFpbmVyLmdldCgiT1FFVFJOIikudG9TdHJpbmcoKS50cmltKCkNCiAgICAgICAgICBpZiAoIWV0cm4uaXNFbXB0eSgpICYmICF0cmNrTnVtLmlzRW1wdHkoKSkgew0KICAgICAgICAgICAgZXRybiA9IGV0cm4gKyAiLCIgKyB0cmNrTnVtDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGNvdW50ZXIgPSBjb3VudGVyICsgMQ0KICAgICAgICBpbnQgcGdycyA9IChjb250YWluZXIuZ2V0KCJPUVBHUlMiKS50b1N0cmluZygpKSBhcyBJbnRlZ2VyDQoNCiAgICAgICAgaWYgKHpTdGF0dXMuZXF1YWxzKCJTdWJtaXR0ZWQiKSkgew0KICAgICAgICAgIGludCBkc2R0ID0gY29udGFpbmVyLmdldCgiT1FEU0RUIikgYXMgSW50ZWdlcg0KICAgICAgICAgIGludCBzaGR0ID0gc2hpcERhdGUgYXMgSW50ZWdlcg0KICAgICAgICAgIGlmIChkc2R0IDwgc2hkdCB8fCBzaGR0ID09IDApIHsNCiAgICAgICAgICAgIHNoaXBEYXRlID0gZHNkdCBhcyBTdHJpbmcNCiAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSBpZiAoKHpTdGF0dXMuZXF1YWxzKCJQYXJ0aWFsbHkgc2hpcHBlZCIpIHx8IHpTdGF0dXMuZXF1YWxzKCJTaGlwcGVkIikpICYmIHBncnMgPiA1MCkgew0KICAgICAgICAgIC8vIFJlYWQgT0RIRUFEIGFuZCBGU0xFREcNCiAgICAgICAgICBIYXNoTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiBkdiA9IGdldERlbGl2ZXJ5RGF0ZUFuZFZBVChvcm5vLCBjb250YWluZXIuZ2V0KCJPUVdITE8iKS50b1N0cmluZygpLCBjb250YWluZXIuZ2V0KCJPUURMSVgiKS50b1N0cmluZygpLCB0ZXB5LCBpbnZvaWNlcykNCiAgICAgICAgICBpbnQgZHNkdCA9IGR2LmdldCgiRExEVCIpIGFzIEludGVnZXINCiAgICAgICAgICBpbnQgc2hkdCA9IHNoaXBEYXRlIGFzIEludGVnZXINCiAgICAgICAgICBpZiAoZHNkdCA8IHNoZHQgJiYgZHNkdCAhPSAwKSB7DQogICAgICAgICAgICBzaGlwRGF0ZSA9IGRzZHQgYXMgU3RyaW5nDQogICAgICAgICAgfQ0KICAgICAgICAgIGRvdWJsZSB2dGFtX3RlbXAgPSBkdi5nZXQoIlZUQU0iKSBhcyBEb3VibGUNCiAgICAgICAgICB2dGFtID0gdnRhbSArIHZ0YW1fdGVtcA0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KDQogICAgRXhwcmVzc2lvbkZhY3RvcnkgZXhwcmVzc2lvbiA9IGRhdGFiYXNlLmdldEV4cHJlc3Npb25GYWN0b3J5KCJNSERJU0giKQ0KICAgIGV4cHJlc3Npb24gPSBleHByZXNzaW9uLmVxKCJPUVJJRE4iLCBvcm5vKS5hbmQoZXhwcmVzc2lvbi5lcSgiT1FST1JDIiwgIjMiKSkNCg0KICAgIERCQWN0aW9uIHF1ZXJ5ID0gZGF0YWJhc2UudGFibGUoIk1IRElTSCIpLmluZGV4KCI2MCIpLm1hdGNoaW5nKGV4cHJlc3Npb24pLnNlbGVjdGlvbigiT1FEU0RUIiwgIk9RTU9ERiIsICJPUU1PREwiLCAiT1FFVFJOIiwgIk9RUEdSUyIsICJPUVdITE8iLCAiT1FETElYIikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiT1FDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiT1FJTk9VIiwgMSkNCiAgICBjb250YWluZXIuc2V0KCJPUUNPTkEiLCBjdW5vKQ0KICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCAzLCBtYXhQYWdlU2l6ZSwgcnNSZWFkRGVsaXZlcmllcykNCg0KICAgIGludCBpbnZvaWNlQ291bnRlciA9IDANCiAgICBTdHJpbmcgaXZub3MgPSAiIg0KICAgIGZvciAoTWFwLkVudHJ5IDwgU3RyaW5nLCBTdHJpbmcgPiBlbnRyeTogaW52b2ljZXMuZW50cnlTZXQoKSkgew0KICAgICAgU3RyaW5nIGludm9pY2VWYWx1ZSA9IGVudHJ5LmdldFZhbHVlKCkNCiAgICAgIGlmIChpbnZvaWNlQ291bnRlciA9PSAwKSB7DQogICAgICAgIGl2bm9zID0gaW52b2ljZVZhbHVlDQogICAgICB9IGVsc2Ugew0KICAgICAgICBpdm5vcyA9IGl2bm9zICsgIiwiICsgaW52b2ljZVZhbHVlDQogICAgICB9DQogICAgICBpbnZvaWNlQ291bnRlciA9IGludm9pY2VDb3VudGVyICsgMQ0KICAgIH0NCg0KICAgIGNhcnIgPSBnZXRDYXJyaWVyKGNhcnIpDQogICAgZGVsaXZlcnkucHV0KCJEU0RUIiwgc2hpcERhdGUgYXMgU3RyaW5nKQ0KICAgIGRlbGl2ZXJ5LnB1dCgiQ0FSUiIsIGNhcnIgYXMgU3RyaW5nKQ0KICAgIGRlbGl2ZXJ5LnB1dCgiTU9ETCIsIG1vZGwgYXMgU3RyaW5nKQ0KICAgIGRlbGl2ZXJ5LnB1dCgiRVRSTiIsIGV0cm4gYXMgU3RyaW5nKQ0KICAgIGRlbGl2ZXJ5LnB1dCgiVlRBTSIsIHZ0YW0gYXMgU3RyaW5nKQ0KICAgIGRlbGl2ZXJ5LnB1dCgiSVZOTyIsIGl2bm9zIGFzIFN0cmluZykNCiAgICByZXR1cm4gZGVsaXZlcnkNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gZ2V0IGRlbGl2ZXJ5IGRhdGUgYW5kIFZBVCBhbW91bnQNCiAgICogQHBhcmFtIG9ybm8gT3JkZXIgbnVtYmVyDQogICAqIEBwYXJhbSB3aGxvIFdhcmVob3VzZSBsb2NhdGlvbg0KICAgKiBAcGFyYW0gZGxpeCBEZWxpdmVyeSBudW1iZXINCiAgICogQHBhcmFtIHRlcHkgVHJhbnNhY3Rpb24gdHlwZQ0KICAgKiBAcGFyYW0gaW52b2ljZXMgTWFwIGNvbnRhaW5pbmcgaW52b2ljZSBpbmZvcm1hdGlvbg0KICAgKiBAcmV0dXJuIE1hcCBjb250YWluaW5nIGRlbGl2ZXJ5IGRhdGUgYW5kIFZBVCBhbW91bnQNCiAgICovDQoNCiAgcHVibGljIEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+IGdldERlbGl2ZXJ5RGF0ZUFuZFZBVChTdHJpbmcgb3JubywgU3RyaW5nIHdobG8sIFN0cmluZyBkbGl4LCBTdHJpbmcgdGVweSwgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gaW52b2ljZXMpIHsNCiAgICBIYXNoTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiBkZWxJbmZvID0gbmV3IEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+ICgpDQogICAgU3RyaW5nIHNoaXBEYXRlID0gIjAiDQogICAgU3RyaW5nIHZ0YW0gPSAiMCINCiAgICBpbnQgY291bnRlciA9IDANCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJPREhFQUQiKS5pbmRleCgiMDAiKS5zZWxlY3Rpb24oIlVBRExEVCIsICJVQURJVkkiLCAiVUFQWU5PIiwgIlVBSVZOTyIsICJVQVlFQTQiLCAiVUFDVU5PIikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiVUFDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiVUFPUk5PIiwgb3JubykNCiAgICBjb250YWluZXIuc2V0KCJVQVdITE8iLCB3aGxvKQ0KICAgIGNvbnRhaW5lci5zZXQoIlVBRExJWCIsIGRsaXggYXMgbG9uZykNCiAgICBjb250YWluZXIuc2V0KCJVQVRFUFkiLCB0ZXB5KQ0KICAgIGlmIChxdWVyeS5yZWFkKGNvbnRhaW5lcikpIHsNCiAgICAgIHNoaXBEYXRlID0gY29udGFpbmVyLmdldCgiVUFETERUIikudG9TdHJpbmcoKQ0KICAgICAgaW50IGl2bm8gPSBjb250YWluZXIuZ2V0KCJVQUlWTk8iKS50b1N0cmluZygpIGFzIEludGVnZXINCiAgICAgIGlmIChpdm5vICE9IDApIHsNCiAgICAgICAgQ2xvc3VyZSA8ID8gPiByc1JlYWRWVEFNID0gew0KICAgICAgICAgIERCQ29udGFpbmVyIGNvbnRhaW5lcjIgLT4NCiAgICAgICAgICBTdHJpbmcgY2lubyA9IGNvbnRhaW5lcjIuZ2V0KCJFU0NJTk8iKS50b1N0cmluZygpDQogICAgICAgICAgaWYgKGNpbm8gIT0gbnVsbCAmJiBjb3VudGVyID09IDApIHsNCiAgICAgICAgICAgIGNvdW50ZXIgPSBjb3VudGVyICsgMQ0KICAgICAgICAgICAgdnRhbSA9IGNvbnRhaW5lcjIuZ2V0KCJFU1ZUQU0iKS50b1N0cmluZygpDQogICAgICAgICAgICBpZiAodnRhbSA9PSBudWxsKSB7DQogICAgICAgICAgICAgIHZ0YW0gPSAiMCINCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGludCByZWNvID0gKGNvbnRhaW5lcjIuZ2V0KCJFU1JFQ08iKS50b1N0cmluZygpKSBhcyBJbnRlZ2VyDQogICAgICAgICAgICBTdHJpbmcgaW52b1N0YXQgPSAiTyINCiAgICAgICAgICAgIGlmIChyZWNvID09IDkpIHsNCiAgICAgICAgICAgICAgaW52b1N0YXQgPSAiQyINCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIFN0cmluZyBkdWVkYXRlID0gY29udGFpbmVyMi5nZXQoIkVTRFVEVCIpLnRvU3RyaW5nKCkNCiAgICAgICAgICAgIFN0cmluZyBjbG9zZWRhdGUgPSBjb250YWluZXIyLmdldCgiRVNSRURFIikudG9TdHJpbmcoKQ0KICAgICAgICAgICAgaW52b2ljZXMucHV0KGl2bm8gYXMgU3RyaW5nLCBpdm5vICsgInwiICsgaW52b1N0YXQgKyAifCIgKyBkdWVkYXRlICsgInwiICsgY2xvc2VkYXRlKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBEQkFjdGlvbiBxdWVyeTEgPSBkYXRhYmFzZS50YWJsZSgiRlNMRURHIikuaW5kZXgoIjEwIikuc2VsZWN0aW9uKCJFU0NJTk8iLCAiRVNWVEFNIiwgIkVTRFVEVCIsICJFU1JFREUiLCAiRVNSRUNPIikuYnVpbGQoKQ0KICAgICAgICBEQkNvbnRhaW5lciBjb250YWluZXIxID0gcXVlcnkxLmdldENvbnRhaW5lcigpDQogICAgICAgIGNvbnRhaW5lcjEuc2V0KCJFU0NPTk8iLCBpQ09OTykNCiAgICAgICAgY29udGFpbmVyMS5zZXQoIkVTRElWSSIsIGNvbnRhaW5lci5nZXQoIlVBRElWSSIpKQ0KICAgICAgICBjb250YWluZXIxLnNldCgiRVNQWU5PIiwgY29udGFpbmVyLmdldCgiVUFQWU5PIikpDQogICAgICAgIFN0cmluZyBjaW5vID0gIjAwMDAwMDAwIiArIGl2bm8NCiAgICAgICAgY2lubyA9IGNpbm8uc3Vic3RyaW5nKGNpbm8ubGVuZ3RoKCkgLSA5KQ0KICAgICAgICBjb250YWluZXIxLnNldCgiRVNDSU5PIiwgY2lubykNCiAgICAgICAgY29udGFpbmVyMS5zZXQoIkVTSU5ZUiIsIGNvbnRhaW5lci5nZXQoIlVBWUVBNCIpKQ0KICAgICAgICBjb250YWluZXIxLnNldCgiRVNDVU5PIiwgY29udGFpbmVyLmdldCgiVUFDVU5PIikpDQogICAgICAgIGNvbnRhaW5lcjEuc2V0KCJFU1RSQ0QiLCAxMCkNCiAgICAgICAgcXVlcnkxLnJlYWRBbGwoY29udGFpbmVyMSwgNywgbWF4UGFnZVNpemUsIHJzUmVhZFZUQU0pDQogICAgICB9DQogICAgfQ0KICAgIGRlbEluZm8ucHV0KCJETERUIiwgc2hpcERhdGUpDQogICAgZGVsSW5mby5wdXQoIlZUQU0iLCB2dGFtKQ0KICAgIHJldHVybiBkZWxJbmZvDQogIH0NCg0KICAvKioNCiAgICogTWV0aG9kIHRvIGdldCBzaGlwcGluZyBhZGRyZXNzIGZvciBhbiBvcmRlcg0KICAgKiBAcGFyYW0gb3JubyBPcmRlciBudW1iZXINCiAgICogQHJldHVybiBNYXAgY29udGFpbmluZyBzaGlwcGluZyBhZGRyZXNzDQogICAqLw0KDQogIHB1YmxpYyBIYXNoTWFwIGdldFNoaXBwaW5nQWRkcmVzcyhTdHJpbmcgb3Jubykgew0KICAgIEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+IHNoaXBBZGRyZXNzID0gbmV3IEhhc2hNYXAgPCBTdHJpbmcsIFN0cmluZyA+ICgpDQogICAgTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiBwYXJhbXMgPSBbIkNPTk8iOiBpQ09OTy50b1N0cmluZygpLnRyaW0oKSwgIk9STk8iOiBvcm5vLnRyaW0oKSwgIkFEUlQiOiAiMSJdDQogICAgQ2xvc3VyZSA8ID8gPiBjYWxsYmFjayA9IHsNCiAgICAgIE1hcCA8IFN0cmluZywNCiAgICAgIFN0cmluZyA+IHJlc3BvbnNlIC0+DQogICAgICBpZiAocmVzcG9uc2UuZXJyb3IgPT0gbnVsbCkgew0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNDVU4iLCByZXNwb25zZS5DVU5NKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNBRDEiLCByZXNwb25zZS5DVUExKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNBRDIiLCByZXNwb25zZS5DVUEyKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNUT1ciLCByZXNwb25zZS5UT1dOKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNFQ0EiLCByZXNwb25zZS5FQ0FSKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNQT04iLCByZXNwb25zZS5QT05PKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNDU0MiLCByZXNwb25zZS5DU0NEKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgc2hpcEFkZHJlc3MucHV0KCJTQ1VOIiwgIiIpDQogICAgICAgIHNoaXBBZGRyZXNzLnB1dCgiU0FEMSIsICIiKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNBRDIiLCAiIikNCiAgICAgICAgc2hpcEFkZHJlc3MucHV0KCJTVE9XIiwgIiIpDQogICAgICAgIHNoaXBBZGRyZXNzLnB1dCgiU0VDQSIsICIiKQ0KICAgICAgICBzaGlwQWRkcmVzcy5wdXQoIlNQT04iLCAiIikNCiAgICAgICAgc2hpcEFkZHJlc3MucHV0KCJTQ1NDIiwgIiIpDQogICAgICB9DQogICAgfQ0KICAgIG1pQ2FsbGVyLmNhbGwoIk9JUzEwME1JIiwgIkdldEFkZHJlc3MiLCBwYXJhbXMsIGNhbGxiYWNrKQ0KICAgIHJldHVybiBzaGlwQWRkcmVzcw0KICB9DQoNCiAgLyoqDQogICAqIE1ldGhvZCB0byBnZXQgYmlsbGluZyBhZGRyZXNzIGZvciBhbiBvcmRlcg0KICAgKiBAcGFyYW0gb3JubyBPcmRlciBudW1iZXINCiAgICogQHJldHVybiBNYXAgY29udGFpbmluZyBiaWxsaW5nIGFkZHJlc3MNCiAgICovDQoNCiAgcHVibGljIEhhc2hNYXAgZ2V0QmlsbGluZ0FkZHJlc3MoU3RyaW5nIG9ybm8pIHsNCiAgICBIYXNoTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiBiaWxsQWRkcmVzcyA9IG5ldyBIYXNoTWFwIDwgU3RyaW5nLCBTdHJpbmcgPiAoKQ0KICAgIE1hcCA8IFN0cmluZywgU3RyaW5nID4gcGFyYW1zID0gWyJDT05PIjogaUNPTk8udG9TdHJpbmcoKS50cmltKCksICJPUk5PIjogb3Juby50cmltKCksICJBRFJUIjogIjMiXQ0KICAgIENsb3N1cmUgPCA/ID4gY2FsbGJhY2sgPSB7DQogICAgICBNYXAgPCBTdHJpbmcsDQogICAgICBTdHJpbmcgPiByZXNwb25zZSAtPg0KICAgICAgaWYgKHJlc3BvbnNlLmVycm9yID09IG51bGwpIHsNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCQ1VOIiwgcmVzcG9uc2UuQ1VOTSkNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCQUQxIiwgcmVzcG9uc2UuQ1VBMSkNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCQUQyIiwgcmVzcG9uc2UuQ1VBMikNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCVE9XIiwgcmVzcG9uc2UuVE9XTikNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCRUNBIiwgcmVzcG9uc2UuRUNBUikNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCUE9OIiwgcmVzcG9uc2UuUE9OTykNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCQ1NDIiwgcmVzcG9uc2UuQ1NDRCkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGJpbGxBZGRyZXNzLnB1dCgiQkNVTiIsICIiKQ0KICAgICAgICBiaWxsQWRkcmVzcy5wdXQoIkJBRDEiLCAiIikNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCQUQyIiwgIiIpDQogICAgICAgIGJpbGxBZGRyZXNzLnB1dCgiQlRPVyIsICIiKQ0KICAgICAgICBiaWxsQWRkcmVzcy5wdXQoIkJFQ0EiLCAiIikNCiAgICAgICAgYmlsbEFkZHJlc3MucHV0KCJCUE9OIiwgIiIpDQogICAgICAgIGJpbGxBZGRyZXNzLnB1dCgiQkNTQyIsICIiKQ0KICAgICAgfQ0KICAgIH0NCiAgICBtaUNhbGxlci5jYWxsKCJPSVMxMDBNSSIsICJHZXRBZGRyZXNzIiwgcGFyYW1zLCBjYWxsYmFjaykNCiAgICByZXR1cm4gYmlsbEFkZHJlc3MNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gZ2V0IG9yZGVyIGZpbmFuY2lhbCBkZXRhaWxzDQogICAqIEBwYXJhbSBvcm5vIE9yZGVyIG51bWJlcg0KICAgKiBAcmV0dXJuIE1hcCBjb250YWluaW5nIG9yZGVyIGZpbmFuY2lhbCBkZXRhaWxzDQogICAqLw0KDQogIHB1YmxpYyBIYXNoTWFwIGdldE9yZGVyRmluYW5jaWFsKFN0cmluZyBvcm5vKSB7DQogICAgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gb3JkZXJGaW4gPSBuZXcgSGFzaE1hcCA8IFN0cmluZywgU3RyaW5nID4gKCkNCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJPT0hFQUQiKS5pbmRleCgiMDAiKS5zZWxlY3Rpb24oIk9BTlRMQSIsICJPQVRYQVAiLCAiT0FUQVhDIikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiT0FDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiT0FPUk5PIiwgb3JubykNCiAgICBpZiAocXVlcnkucmVhZChjb250YWluZXIpKSB7DQogICAgICBvcmRlckZpbi5wdXQoIk5UTEEiLCBjb250YWluZXIuZ2V0KCJPQU5UTEEiKSBhcyBTdHJpbmcpDQogICAgfQ0KICAgIHJldHVybiBvcmRlckZpbg0KICB9DQoNCiAgLyoqDQogICAqIE1ldGhvZCB0byByZXRyaWV2ZSBzaGlwcGluZyBjaGFyZ2VzIGZvciBhbiBvcmRlcg0KICAgKiBAcGFyYW0gb3JubyBPcmRlciBudW1iZXINCiAgICovDQoNCiAgcHVibGljIHZvaWQgcnR2U2hpcHBpbmdDaGFyZ2VzKFN0cmluZyBvcm5vKSB7DQogICAgY2hyZyA9IDAuMA0KICAgIGZydCA9IDAuMA0KICAgIHRheENoYXJnZSA9IDAuMA0KICAgIENsb3N1cmUgPCA/ID4gcnNSZWFkTUhESVNIID0gew0KICAgICAgREJDb250YWluZXIgY29udGFpbmVyIC0+DQogICAgICBTdHJpbmcgZGxpeCA9IGNvbnRhaW5lci5nZXQoIk9RRExJWCIpIGFzIFN0cmluZw0KICAgICAgU3RyaW5nIHdobG8gPSBjb250YWluZXIuZ2V0KCJPUVdITE8iKQ0KICAgICAgaWYgKGRsaXggIT0gbnVsbCkgew0KICAgICAgICBydHZDaGFyZ2VzKG9ybm8sIGRsaXgsIHdobG8pDQogICAgICB9DQogICAgfQ0KICAgIEV4cHJlc3Npb25GYWN0b3J5IGV4cHJlc3Npb24gPSBkYXRhYmFzZS5nZXRFeHByZXNzaW9uRmFjdG9yeSgiTUhESVNIIikNCiAgICAvLyBzZXQgb3JkZXIgbnVtYmVyIGZpbHRlcg0KICAgIGV4cHJlc3Npb24gPSBleHByZXNzaW9uLmVxKCJPUVJJRE4iLCBvcm5vKS5hbmQoZXhwcmVzc2lvbi5lcSgiT1FUVFlQIiwgIjMxIikpDQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTUhESVNIIikuaW5kZXgoIjAwIikubWF0Y2hpbmcoZXhwcmVzc2lvbikuc2VsZWN0aW9uKCJPUVdITE8iLCAiT1FETElYIikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiT1FDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiT1FJTk9VIiwgMSkNCiAgICBxdWVyeS5yZWFkQWxsKGNvbnRhaW5lciwgMiwgbWF4UGFnZVNpemUsIHJzUmVhZE1IRElTSCkNCg0KICAgIHJ0dkNoYXJnZXMob3JubywgIjAiLCAiIikNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gcmV0cmlldmUgY2hhcmdlcyBmb3IgYW4gb3JkZXINCiAgICogQHBhcmFtIG9ybm8gT3JkZXIgbnVtYmVyDQogICAqIEBwYXJhbSBkbGl4IERlbGl2ZXJ5IG51bWJlcg0KICAgKiBAcGFyYW0gd2hsbyBXYXJlaG91c2UgbG9jYXRpb24NCiAgICovDQoNCiAgcHVibGljIHZvaWQgcnR2Q2hhcmdlcyhTdHJpbmcgb3JubywgU3RyaW5nIGRsaXgsIFN0cmluZyB3aGxvKSB7DQogICAgQ2xvc3VyZSA8ID8gPiByc1JlYWRPT0NIUkcgPSB7DQogICAgICBEQkNvbnRhaW5lciBjb250YWluZXIgLT4NCiAgICAgIFN0cmluZyBjcmlkID0gY29udGFpbmVyLmdldCgiT0VDUklEIikudG9TdHJpbmcoKS50cmltKCkNCiAgICAgIGlmIChjcmlkICE9IG51bGwpIHsNCiAgICAgICAgZG91YmxlIGNyYW0gPSBjb250YWluZXIuZ2V0KCJPRUNSQU0iKSBhcyBEb3VibGUNCiAgICAgICAgaWYgKCFkbGl4LmVxdWFscygiMCIpKSB7DQogICAgICAgICAgaWYgKGNyaWQuc3RhcnRzV2l0aCgiRlJUIikpIHsNCiAgICAgICAgICAgIGZydCA9IGZydCArIGNyYW0NCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKGNyaWQuZXF1YWxzKCJTTCBUQVgiKSkgew0KICAgICAgICAgICAgICB0YXhDaGFyZ2UgPSB0YXhDaGFyZ2UgKyBjcmFtDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICBjaHJnID0gY2hyZyArIGNyYW0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgU3RyaW5nIGNoc3QgPSBjb250YWluZXIuZ2V0KCJPRUNIU1QiKS50b1N0cmluZygpLnRyaW0oKQ0KICAgICAgICAgIGlmIChjcmlkLnN0YXJ0c1dpdGgoIkZSVCIpICYmICFjaHN0LmVxdWFscygiOTAiKSkgew0KICAgICAgICAgICAgZnJ0ID0gZnJ0ICsgY3JhbQ0KICAgICAgICAgIH0NCiAgICAgICAgICBpZiAoIWNyaWQuc3RhcnRzV2l0aCgiRlJUIikgJiYgIWNoc3QuZXF1YWxzKCI5MCIpKSB7DQogICAgICAgICAgICBpZiAoY3JpZC5lcXVhbHMoIlNMIFRBWCIpKSB7DQogICAgICAgICAgICAgIHRheENoYXJnZSA9IHRheENoYXJnZSArIGNyYW0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIGNocmcgPSBjaHJnICsgY3JhbQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJPT0NIUkciKS5pbmRleCgiMTAiKS5zZWxlY3Rpb24oIk9FQ1JJRCIsICJPRUNSQU0iLCAiT0VDSFNUIikuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciA9IHF1ZXJ5LmdldENvbnRhaW5lcigpDQogICAgY29udGFpbmVyLnNldCgiT0VDT05PIiwgaUNPTk8pDQogICAgY29udGFpbmVyLnNldCgiT0VPUk5PIiwgb3JubykNCiAgICBjb250YWluZXIuc2V0KCJPRURMSVgiLCBkbGl4IGFzIExvbmcpDQogICAgY29udGFpbmVyLnNldCgiT0VXSExPIiwgd2hsbykNCiAgICBxdWVyeS5yZWFkQWxsKGNvbnRhaW5lciwgNCwgbWF4UGFnZVNpemUsIHJzUmVhZE9PQ0hSRykNCiAgfQ0KDQogIC8qKg0KICAgKiBNZXRob2QgdG8gcmV0cmlldmUgZGlzY291bnQgZm9yIGFuIG9yZGVyDQogICAqIEBwYXJhbSBvcm5vIE9yZGVyIG51bWJlcg0KICAgKiBAcmV0dXJuIERpc2NvdW50IGFtb3VudA0KICAgKi8NCg0KICBwdWJsaWMgZG91YmxlIHJ0dkRpc2NvdW50KFN0cmluZyBvcm5vKSB7DQogICAgZG91YmxlIGRpc2NvdW50ID0gMC4wDQoNCiAgICBDbG9zdXJlIDwgPyA+IHJzUmVhZE9PTElDSCA9IHsNCiAgICAgIERCQ29udGFpbmVyIGNvbnRhaW5lciAtPg0KICAgICAgU3RyaW5nIGNyaWQgPSBjb250YWluZXIuZ2V0KCJPN0NSSUQiKS50b1N0cmluZygpLnRyaW0oKQ0KICAgICAgaWYgKGNyaWQgIT0gbnVsbCkgew0KICAgICAgICBkb3VibGUgY3JhbSA9IGNvbnRhaW5lci5nZXQoIk83Q1JBTSIpIGFzIERvdWJsZQ0KICAgICAgICBkaXNjb3VudCA9IGRpc2NvdW50ICsgY3JhbQ0KICAgICAgfQ0KICAgIH0NCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJPT0xJQ0giKS5pbmRleCgiMDAiKS5zZWxlY3Rpb24oIk83Q1JJRCIsICJPN0NSQU0iKS5idWlsZCgpDQogICAgREJDb250YWluZXIgY29udGFpbmVyID0gcXVlcnkuZ2V0Q29udGFpbmVyKCkNCiAgICBjb250YWluZXIuc2V0KCJPN0NPTk8iLCBpQ09OTykNCiAgICBjb250YWluZXIuc2V0KCJPN09STk8iLCBvcm5vKQ0KICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCAyLCBtYXhQYWdlU2l6ZSwgcnNSZWFkT09MSUNIKQ0KDQogICAgcmV0dXJuIGRpc2NvdW50DQogIH0NCg0KICAvKioNCiAgICogTWV0aG9kIHRvIHJldHJpZXZlIFZBVCBhbW91bnQgZm9yIGFuIG9yZGVyDQogICAqIEBwYXJhbSBvcm5vIE9yZGVyIG51bWJlcg0KICAgKiBAcmV0dXJuIFZBVCBhbW91bnQNCiAgICovDQoNCiAgcHVibGljIGRvdWJsZSBydHZWYXRBbW91bnQoU3RyaW5nIG9ybm8pIHsNCiAgICBkb3VibGUgdmF0QW10ID0gMA0KICAgIE1hcCA8IFN0cmluZywgU3RyaW5nID4gcGFyYW1zID0gWyJDT05PIjogaUNPTk8udG9TdHJpbmcoKS50cmltKCksICJPUk5PIjogb3Jub10NCiAgICBDbG9zdXJlIDwgPyA+IGNhbGxiYWNrID0gew0KICAgICAgTWFwIDwgU3RyaW5nLA0KICAgICAgU3RyaW5nID4gcmVzcG9uc2UgLT4NCiAgICAgIGlmIChyZXNwb25zZS5WVEFNICE9IG51bGwgJiYgcmVzcG9uc2UuSVZUQSAhPSBudWxsKSB7DQogICAgICAgIC8vR2V0IFZBVCBhbW91bnRzDQogICAgICAgIGRvdWJsZSByZXNwVlRBTSA9IDANCiAgICAgICAgU3RyaW5nIHN0clZUQU0gPSByZXNwb25zZS5WVEFNIGFzIFN0cmluZw0KICAgICAgICBpZiAoIXN0clZUQU0udHJpbSgpLmlzRW1wdHkoKSkgew0KICAgICAgICAgIHJlc3BWVEFNID0gc3RyVlRBTSBhcyBEb3VibGUNCiAgICAgICAgfQ0KICAgICAgICBkb3VibGUgcmVzcElWVEEgPSAwDQogICAgICAgIFN0cmluZyBzdHJJVlRBID0gcmVzcG9uc2UuSVZUQSBhcyBTdHJpbmcNCiAgICAgICAgaWYgKCFzdHJJVlRBLnRyaW0oKS5pc0VtcHR5KCkpIHsNCiAgICAgICAgICByZXNwSVZUQSA9IHJlc3BvbnNlLklWVEEgYXMgRG91YmxlDQogICAgICAgIH0NCiAgICAgICAgdmF0QW10ID0gcmVzcFZUQU0gKyByZXNwSVZUQQ0KICAgICAgfQ0KICAgIH0NCiAgICBtaUNhbGxlci5jYWxsKCJPSVMxMDBNSSIsICJHZXRPcmRlclZhbHVlIiwgcGFyYW1zLCBjYWxsYmFjaykNCiAgICByZXR1cm4gdmF0QW10DQogIH0NCn0="}}}