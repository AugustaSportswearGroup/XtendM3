{"programModules":{"EXT104MI":{"program":"EXT104MI","triggers":{},"transactions":{"LstStopOrdByCR":{"sourceUuid":"3c49933a-0f11-4ecd-aeae-122ff328c034","name":"LstStopOrdByCR","program":"EXT104MI","description":"List on hold orders by credit rep","active":true,"multi":true,"modified":1710883684795,"modifiedBy":"SADANGJ","outputFields":[{"name":"CUNO","description":"Customer number","length":10,"mandatory":false,"type":"A"},{"name":"CUNM","description":"Customer name","length":36,"mandatory":false,"type":"A"},{"name":"PYNO","description":"Payer number","length":10,"mandatory":false,"type":"A"},{"name":"ORNO","description":"Order number","length":10,"mandatory":false,"type":"A"},{"name":"OBLC","description":"Order stop","length":1,"mandatory":false,"type":"A"},{"name":"ORSL","description":"Lowest status","length":2,"mandatory":false,"type":"A"},{"name":"ORST","description":"Highest status","length":2,"mandatory":false,"type":"A"},{"name":"ORDT","description":"Order date","length":8,"mandatory":false,"type":"A"},{"name":"CDRC","description":"Credit Rep","length":3,"mandatory":false,"type":"A"},{"name":"ORTP","description":"Order type","length":3,"mandatory":false,"type":"A"},{"name":"YREF","description":"Your reference","length":30,"mandatory":false,"type":"A"},{"name":"OREF","description":"Our reference","length":30,"mandatory":false,"type":"A"},{"name":"CUOR","description":"Customer's order number","length":20,"mandatory":false,"type":"A"},{"name":"NTLA","description":"Total order value net","length":16,"mandatory":false,"type":"A"},{"name":"TEPY","description":"Payment terms","length":3,"mandatory":false,"type":"A"},{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"MODL","description":"Delivery  method","length":3,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CDRC","description":"Credit Rep","length":3,"mandatory":true,"type":"A"},{"name":"OBLC","description":"Credit Stop from","length":1,"mandatory":true,"type":"A"},{"name":"OBLU","description":"Credit stop to","length":1,"mandatory":true,"type":"A"},{"name":"ORSL","description":"Order lower status from","length":2,"mandatory":true,"type":"A"},{"name":"ORSU","description":"Order lower status to","length":2,"mandatory":true,"type":"A"},{"name":"DIVI","description":"Division","length":3,"mandatory":false,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"3c49933a-0f11-4ecd-aeae-122ff328c034":{"uuid":"3c49933a-0f11-4ecd-aeae-122ff328c034","updated":1712547412917,"updatedBy":"SADANGJ","created":1701276674183,"createdBy":"SADANGJ","apiVersion":"0.9","beVersion":"16.0.0.20240116163623.6","language":"GROOVY","codeHash":"20F8F5F0779C633CEF8B7EF2D7B2F8BF108D6B32134EB17ACD1E5E29A479C874","code":""}}}